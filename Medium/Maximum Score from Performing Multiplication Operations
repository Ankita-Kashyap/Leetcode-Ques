class Solution {
public:
    int dp[1000][1000];
    
    int help(int i,vector<int>&M,vector<int>&nums,int s)
    {
        
       
     if (i == M.size())return 0;
        
        if(dp[i][s] != -1){
            return dp[i][s];
        }
        
        int e = nums.size()-1-(i-s);
        int op1 = M[i]*nums[s] + help(i+1,M,nums,s+1);
        int op2 = M[i]*nums[e] + help(i+1,M,nums,s);
        return dp[i][s] = max(op1,op2);
    }
    int maximumScore(vector<int>& nums, vector<int>& M) {
        
        memset(dp,-1,sizeof dp);
        return help(0,M,nums,0);
        
    }
};
